(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{523:function(t,a,s){"use strict";s.r(a);var r=s(25),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"第六章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第六章"}},[t._v("#")]),t._v(" 第六章")]),t._v(" "),s("h1",{attrs:{id:"数组的顺序存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的顺序存储"}},[t._v("#")]),t._v(" 数组的顺序存储")]),t._v(" "),s("p",[t._v("数组：由相同类型的数据元素构成的有限集合。")]),t._v(" "),s("p",[t._v("一维数组可以看成线性表，二维数组起始就是数组套数组，只不过将一位数组中的数据想象成数组。")]),t._v(" "),s("p",[t._v("索引公式 = 第一个元素的地址 + 之后元素的个数 * 单个元素所占字节。")]),t._v(" "),s("h1",{attrs:{id:"特殊矩阵的压缩存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊矩阵的压缩存储"}},[t._v("#")]),t._v(" 特殊矩阵的压缩存储")]),t._v(" "),s("p",[t._v("可以用数组来表示矩阵，但是表示的过程中有一些特殊的数据，为了节省空可以压缩存储。例如对称矩阵，三角矩阵，稀疏矩阵（非零元素小于 5% 的矩阵）等。直接存进去会浪费很多空间，根据数据的特性可以实现压缩。")]),t._v(" "),s("h2",{attrs:{id:"对称矩阵"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对称矩阵"}},[t._v("#")]),t._v(" 对称矩阵")]),t._v(" "),s("h2",{attrs:{id:"三角矩阵"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三角矩阵"}},[t._v("#")]),t._v(" 三角矩阵")]),t._v(" "),s("h2",{attrs:{id:"对角矩阵"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对角矩阵"}},[t._v("#")]),t._v(" 对角矩阵")]),t._v(" "),s("h2",{attrs:{id:"稀疏矩阵"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#稀疏矩阵"}},[t._v("#")]),t._v(" 稀疏矩阵")]),t._v(" "),s("h1",{attrs:{id:"广义表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#广义表"}},[t._v("#")]),t._v(" 广义表")]),t._v(" "),s("h1",{attrs:{id:"数字矩阵"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数字矩阵"}},[t._v("#")]),t._v(" 数字矩阵")])])}),[],!1,null,null,null);a.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[187],{546:function(a,t,v){"use strict";v.r(t);var s=v(25),_=Object(s.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"网络层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络层"}},[a._v("#")]),a._v(" 网络层")]),a._v(" "),v("p",[a._v("网络侧只负责尽力转发数据包，不保证质量，丢失就重传。")]),a._v(" "),v("h1",{attrs:{id:"网络层的两种服务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络层的两种服务"}},[a._v("#")]),a._v(" 网络层的两种服务")]),a._v(" "),v("p",[a._v("根据网络层是否建立可靠的通信来区分，出现了，虚电路服务，数据报服务。")]),a._v(" "),v("h2",{attrs:{id:"虚电路服务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#虚电路服务"}},[a._v("#")]),a._v(" 虚电路服务")]),a._v(" "),v("p",[a._v("虚电路：虚电路服务保证了网络层承担可靠的服务，即保证信息送达对方，但是这种服务带来的缺点是需要昂贵的硬件支撑，为了保证传输的可靠性需要昂贵的程控交换机。")]),a._v(" "),v("ul",[v("li",[a._v("面向连接的通信")]),a._v(" "),v("li",[a._v("建立虚电路，也就是逻辑上的电路，并不是真正物理上的连接，保证通信所需的资源。")]),a._v(" "),v("li",[a._v("不要填写目的地址，只需要虚电路的编号。")]),a._v(" "),v("li",[a._v("加上可靠传输的网络协议可以使实现无差错传输。")])]),a._v(" "),v("p",[a._v("原理：虚电路并不是物理上的线路，而是逻辑上的，建立的过程则是虚拟电路建立，数据传送，虚拟电路拆除。")]),a._v(" "),v("p",[a._v("例子：ATM 机，电话线路等电信服务使用的是虚电路服务。")]),a._v(" "),v("h2",{attrs:{id:"数据报服务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据报服务"}},[a._v("#")]),a._v(" 数据报服务")]),a._v(" "),v("ul",[v("li",[a._v("因特网的设计思路")]),a._v(" "),v("li",[a._v("网路层向上只提供数据报的交付服务，尽最大努力的提交。")]),a._v(" "),v("li",[a._v("发送分组时不需要建立连接，每个分组独立发送，与其前后分组无关。")]),a._v(" "),v("li",[a._v("网路层不提供服务质量承诺，所以传送容易出错。")]),a._v(" "),v("li",[a._v("路由器可以设计简单价格低廉。因为不提供端到端的"),v("strong",[a._v("可靠")]),a._v("服务。")]),a._v(" "),v("li",[a._v("关于差错的控制交给运输层来负责。")]),a._v(" "),v("li",[a._v("网络的造价降低，运行灵活，适合多种应用。")])]),a._v(" "),v("p",[a._v("数据报：数据报服务提供的是不可靠的传输，不保证数据完整送达，送不过去那就重传，直到可以送达为止，实现尽最大努力的交付！对硬件要求不高，可靠性交给传输层来做。")]),a._v(" "),v("p",[a._v("原理：整个过程不需要建立连接，首先数据报服务将信息分组，每一组独立发送，这样可能会导致分组丢失，出错重复失序等问题，出现问题就重新传送，计算机有很强的差错控制。")]),a._v(" "),v("p",[a._v("例子：因特网采用的就是数据报服务，因为低廉的硬件，计算机强大的差错控制。")]),a._v(" "),v("h2",{attrs:{id:"两种服务的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#两种服务的区别"}},[a._v("#")]),a._v(" 两种服务的区别")]),a._v(" "),v("ul",[v("li",[a._v("虚电路服务的网络层保证服务质量，而数据报服务则将其交给运输层来保证。")]),a._v(" "),v("li",[a._v("虚电路服务需要建立连接，而数据报服务不需要。")]),a._v(" "),v("li",[a._v("进行分组时，虚电路服务按顺序到达，数据包服务不一定按顺序。")]),a._v(" "),v("li",[a._v("终点的地址在建立连接时使用，而数据报服务的每个分组都有完整的地址。")]),a._v(" "),v("li",[a._v("分组与分组，如果在同一条虚电路上就按同一路进行转发，数据报服务中的分组则是独立的自己选择路由转发。")]),a._v(" "),v("li",[a._v("如果某个节点出现故障，那么这个节点上的虚电路都不能工作，而数据报可能会在这个节点上丢失一些分组。")]),a._v(" "),v("li",[a._v("差错控制和流量控制虚电路服务中则是由网络负责或用户主机负责，数据报服务则是由用户主机负责，网络层不负责。")])]),a._v(" "),v("p",[a._v("其实这些服务本质上都是向下给运输层提供的服务。")]),a._v(" "),v("p",[a._v("服务的目的是为了实现可靠的交付。")]),a._v(" "),v("p",[a._v("但是由网络还是端系统来负责存在争议，就是二者的区别！")]),a._v(" "),v("h1",{attrs:{id:"ip-地址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ip-地址"}},[a._v("#")]),a._v(" IP 地址")]),a._v(" "),v("p",[a._v("IP 地址可以标识一台主机，一共 32 位，不同地域下不同，所以 IP 地址唯一标识了主机所在的位置。而 MAC 地址虽然也能唯一标识一台主机，但是根据其结构只能拿到生产厂家的信息。")]),a._v(" "),v("p",[a._v("关于 IP 地址的发展划分为三阶段： 分类的IP地址，子网的划分，构成超网。")]),a._v(" "),v("h2",{attrs:{id:"ip-组成结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ip-组成结构"}},[a._v("#")]),a._v(" ip 组成结构")]),a._v(" "),v("p",[a._v("ip 地址由网络号和主机号组成。")]),a._v(" "),v("ul",[v("li",[a._v("网络号：net-id 标志这个主机所连接到的网络，每一个网段对应一个网络 ID。")]),a._v(" "),v("li",[a._v("主机号：host-id 标志着该主机或路由。")])]),a._v(" "),v("p",[a._v("网络号确定了大致范围，而主机号则确定了范围内的具体位置。")]),a._v(" "),v("p",[a._v("ip 地址分为五类， A / B / C / D / E")]),a._v(" "),v("p",[a._v("32 位的二进制 IP 地址每八位分割开来，形成了 4 段，每一段在转成十进制就是我们现在经常看到的。而段与段直接用 . 来分割，也就是点分十进制记法。")]),a._v(" "),v("h2",{attrs:{id:"ip-地址的特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ip-地址的特点"}},[a._v("#")]),a._v(" IP 地址的特点")]),a._v(" "),v("ul",[v("li",[a._v("IP 地址的网络号由管理机构分配，剩下的主机号则有单位自行分配。")]),a._v(" "),v("li",[a._v("路由器只根据网络号去转发分组降低了路由表中的项目数。减小了存储空间。")])]),a._v(" "),v("h1",{attrs:{id:"ip-地址和-mac-地址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ip-地址和-mac-地址"}},[a._v("#")]),a._v(" IP 地址和 MAC 地址")]),a._v(" "),v("p",[a._v("IP 称为逻辑地址，硬件地址也就是MAC地址，也就是物理地址。")]),a._v(" "),v("p",[a._v("IP 地址放在数据IP数据报的首部，而 MAC 地址放在 MAC帧的尾部。")]),a._v(" "),v("p",[a._v("IP 地址就像送快递一样，拿到目的第在中间的路由器中不断的转运。")]),a._v(" "),v("p",[a._v("网络层之的地址是 IP 之下是 MAC。从虚拟的 IP 层面来看可以看成 IP 数据报的流动。")]),a._v(" "),v("p",[a._v("IP 层封装了底层复杂的细节，抽象起来再网络侧讨论主机与主机间的通信。")]),a._v(" "),v("p",[a._v("流程如下：")]),a._v(" "),v("h1",{attrs:{id:"arp"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#arp"}},[a._v("#")]),a._v(" ARP")]),a._v(" "),v("p",[a._v("通俗的讲 ARP 协议是用来解析ip地址和硬件地址的。其内部有一个高速缓存，这个缓存将ip 地址和物理地址进行了映射。随着时间的变化映射还会失效。")]),a._v(" "),v("p",[a._v("通过以下这个例子可以了解 ARP 体现的作用：")]),a._v(" "),v("p",[a._v("现在有两个计算机（A/B）相互通信，A 向 B 发送一段信息，这段信息从上至下层层包装，A 知晓的是 B 的 IP 地址，但是这段消息想要送达 B 则需要知晓其 MAC 地址。也就是需要将 对方的 MAC 地址封装到消息的头部。")]),a._v(" "),v("p",[a._v("假设第一次发送消息 A 先去看一下自己的 ARP 缓存表中看一看之前有没有连接过 B 的主机，如果连接过并且没有过时，那么就记录过主机 B 的 IP 地址对应的 MAC 地址，将这个 MAC 地址直接封装到头部就可以。")]),a._v(" "),v("p",[a._v("如果发现没有 ARP 缓存表中没有 B 主机的记录。那么主机 A 就会执行 ARP 程序，发送一个 ARP 请求的报文广播包，这个包里面记录了自己的 IP 地址（源IP）和 MAC 地址以及对方的 IP 地址（目的IP）等信息，如下所示：")]),a._v(" "),v("div",{staticClass:"language-bash line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-bash"}},[v("code",[v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" mac：1111.1111.1111.1111.1111\n"),v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" IP： "),v("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.1")]),a._v(".1.1\ntarget mac：ffff.ffff.ffff.ffff （因为第一次通信，不知道对方的mac地址）\ntarget IP：1.1.1.2\n")])]),a._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[a._v("1")]),v("br"),v("span",{staticClass:"line-number"},[a._v("2")]),v("br"),v("span",{staticClass:"line-number"},[a._v("3")]),v("br"),v("span",{staticClass:"line-number"},[a._v("4")]),v("br")])]),v("p",[a._v("交换机接受到广播包后，发现目的地 MAC 地址全是 ffff，交换机就知道了主机 A 想找主机 B 的想法，于是交换机就开始广播，。")]),a._v(" "),v("p",[a._v("交换机只是二层设备，只会拆包，不会进行更深的解析，只知道数据包的源，目的 MAC 地址。")]),a._v(" "),v("p",[a._v("当 B 主机发现了广播包后，比对了一下里面的 IP 地址，发现里面目的地 IP 地址是指向自己的，知道了有机器想给他发消息，然后主机 B 会根据广播包中记录的 A 主机的 MAC 地址，将自己的 MAC 地址给主机 A 。单播给主机 A 。")]),a._v(" "),v("div",{staticClass:"language-bash line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-bash"}},[v("code",[v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" mac：2222.2222.2222.2222\n"),v("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" IP： "),v("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.1")]),a._v(".1.1\ntarget mac：1111.1111.1111.1111 （从请求包里得知A的mac地址，于是单播）\ntarget IP：1.1.1.1\n")])]),a._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[a._v("1")]),v("br"),v("span",{staticClass:"line-number"},[a._v("2")]),v("br"),v("span",{staticClass:"line-number"},[a._v("3")]),v("br"),v("span",{staticClass:"line-number"},[a._v("4")]),v("br")])]),v("p",[a._v("主机 A 拿到 B 回应的报文后，将 MAC 地址封装到信息上，然后将这个报文再存在 ARP 缓存表中，下次就可以直接查表使用。")]),a._v(" "),v("p",[a._v("在 CMD 下通过 "),v("code",[a._v("arp -a")]),a._v(" 查看主机的 ARP 表，我的如下：")]),a._v(" "),v("div",{staticClass:"language-bash line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-bash"}},[v("code",[a._v("C:"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Users"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("***"),v("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("arp -a\n接口: "),v("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".28.1 --- 0x8\n  Internet 地址         物理地址              类型\n  "),v("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.188")]),a._v(".28.255        ff-ff-ff-ff-ff-ff     静态\n  "),v("span",{pre:!0,attrs:{class:"token number"}},[a._v("224.0")]),a._v(".0.251           01-00-5e-00-00-fb     静态\n  "),v("span",{pre:!0,attrs:{class:"token number"}},[a._v("239.255")]),a._v(".255.250       01-00-5e-7f-ff-fa     静态\n  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])]),a._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[a._v("1")]),v("br"),v("span",{staticClass:"line-number"},[a._v("2")]),v("br"),v("span",{staticClass:"line-number"},[a._v("3")]),v("br"),v("span",{staticClass:"line-number"},[a._v("4")]),v("br"),v("span",{staticClass:"line-number"},[a._v("5")]),v("br"),v("span",{staticClass:"line-number"},[a._v("6")]),v("br"),v("span",{staticClass:"line-number"},[a._v("7")]),v("br")])]),v("h1",{attrs:{id:"ip-数据报的首部格式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ip-数据报的首部格式"}},[a._v("#")]),a._v(" IP 数据报的首部格式")]),a._v(" "),v("p",[a._v("数据报 = 首部 + 数据部")]),a._v(" "),v("p",[a._v("首部 = 固定部分 + 可变部分")]),a._v(" "),v("p",[a._v("固定部分 = 20 字节")]),a._v(" "),v("p",[a._v("首部组成：")]),a._v(" "),v("h1",{attrs:{id:"ip-层转发分组的流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ip-层转发分组的流程"}},[a._v("#")]),a._v(" IP 层转发分组的流程")]),a._v(" "),v("h2",{attrs:{id:"路由器中路由表的构造"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#路由器中路由表的构造"}},[a._v("#")]),a._v(" 路由器中路由表的构造")]),a._v(" "),v("p",[a._v("路由表中存储了目的主机所在网络和下一跳地址。")]),a._v(" "),v("p",[a._v("根据目的主机所在网络然后查下一跳地址的路由器，路由器再去路由表中找下一跳的路由器，可能会经过多次的间接交付。只有数据报到达最后一个路由器时才会相目的主机直接交付。")]),a._v(" "),v("h2",{attrs:{id:"特殊的路由"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特殊的路由"}},[a._v("#")]),a._v(" 特殊的路由")]),a._v(" "),v("ul",[v("li",[a._v("特定主机路由：为特定主体提供一个特定的路由，方便测试使用。")]),a._v(" "),v("li",[a._v("默认路由：如果目的网络不存在路由表中就会以默认的方式发送数据报。默认送往一个路由器中，用于提高效率节省路由表的空间。")])]),a._v(" "),v("h2",{attrs:{id:"路由器分组转发算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#路由器分组转发算法"}},[a._v("#")]),a._v(" 路由器分组转发算法")]),a._v(" "),v("ul",[v("li",[a._v("首先从数据报首部提取目的主机的 IP 地址 D，根据 D 得到目的网络地址 N。")]),a._v(" "),v("li",[a._v("如果网络地址 N 和主机是直接相连接的，那么直接把数据报发送给主机 D。")]),a._v(" "),v("li",[a._v("如果不是直接相连就间接交付，看一下路由表中是否有目的地址 D 的特定路由主机，如果存在就将数据报传给对应的下一跳地址。")]),a._v(" "),v("li",[a._v("如果没有目的地址 D 的话就看有没有目的网络地址 N，如果存在就将数据报传给 N 对应的下一跳路由。")]),a._v(" "),v("li",[a._v("如果目的网络 N 的地址还没有的话就将数据报传给默认的路由器。")]),a._v(" "),v("li",[a._v("如果连默认路由器都没有的话那么就报告转发分组出错。")])]),a._v(" "),v("h1",{attrs:{id:"划分子网"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#划分子网"}},[a._v("#")]),a._v(" 划分子网")]),a._v(" "),v("p",[a._v("在原来 IP 地址的基础上再增加了一个字段，子网字段。但是子网字段只是占用了主机号的几个位置，对主机号进行了重新划分，而不是使 IP 地址变长。")]),a._v(" "),v("ul",[v("li",[a._v("IP 地址 = 网络号 + 子网号 + 主机号")])]),a._v(" "),v("h2",{attrs:{id:"流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#流程"}},[a._v("#")]),a._v(" 流程")]),a._v(" "),v("ul",[v("li",[a._v("首先数据报根据网络号找到对应的路由器。")]),a._v(" "),v("li",[a._v("然后将数据报发送到路由器上，路由器收到 IP 数据报后根据目的网络号 net-id 和子网号 subnet-id 找到目的子网。")]),a._v(" "),v("li",[a._v("最后将 IP 数据报直接交付目的主机。")])]),a._v(" "),v("p",[a._v("举个例子：例如别人寄了一个快递（数据报）给你，首先根据地址（IP）发往河南（网络号），然后河南有很多的地区，对所有的地区都扫描一遍显然很费时间，然后将河南的地区划分成了很多城市（子网号），并没有修改快递上的地址，快递员自己手中有一串数字（子网掩码），根据这串数字和快递上的地址进行运算（&）就可以得到对应的城市（主机）。")]),a._v(" "),v("h2",{attrs:{id:"注意"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[a._v("#")]),a._v(" 注意")]),a._v(" "),v("p",[a._v("根据 IP 地址并不能看出子网划分与否。还有一个子网掩码的存在，和 IP 地址搭配可以找到其中的子网部分。")]),a._v(" "),v("p",[a._v("子网掩码一共 32 位，由 0/1 组成，1 对应原 IP 地址中的网络号和子网号，0对应主机号。")]),a._v(" "),v("ul",[v("li",[a._v("A类地址的默认子网掩码：255.0.0.0")]),a._v(" "),v("li",[a._v("B类地址的默认子网掩码：255.255.0.0")]),a._v(" "),v("li",[a._v("C类地址的默认子网掩码：255.255.255.0")])]),a._v(" "),v("p",[a._v("IP 地址和子网掩码搭配使用的方法是： （IP地址） AND （子网掩码） = 网络地址")]),a._v(" "),v("h1",{attrs:{id:"无分类编址-cidr"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#无分类编址-cidr"}},[a._v("#")]),a._v(" 无分类编址 CIDR")]),a._v(" "),v("ul",[v("li",[a._v("全称为无分类域间路由选择 CIDR")]),a._v(" "),v("li",[a._v("CIDR 消除了传统的 A类，B类和 C类地址以及划分子网的概念，这样可以更有效的分配 IPv4 的地址空间。")]),a._v(" "),v("li",[a._v("IP 地址 = 网络前缀 + 主机号")]),a._v(" "),v("li",[a._v("表示方法则为在 128.14.35.7/20 其中 20 代表网络前缀所占位数。")]),a._v(" "),v("li",[a._v("这种编址方式同样存在类似于子网掩码的东西，放在这里称为地址掩码。")]),a._v(" "),v("li",[a._v("而网络前缀都的连续 IP 地址 CIDR称为地址块。")]),a._v(" "),v("li",[a._v("路由聚合：根据CIDR 地址块来查找目的网络的方式称为路由聚合。")]),a._v(" "),v("li",[a._v("路由聚合也成为构成超网。")])]),a._v(" "),v("h1",{attrs:{id:"路由选择协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#路由选择协议"}},[a._v("#")]),a._v(" 路由选择协议")]),a._v(" "),v("p",[a._v("在选择合适的传输路径之时需要考虑很多方面的因素，不同方面对应着不同的协议。")]),a._v(" "),v("h2",{attrs:{id:"rip-协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rip-协议"}},[a._v("#")]),a._v(" RIP 协议")]),a._v(" "),v("p",[a._v("以距离为参考，路由器和就近网络的距离为 1 ，之后的依次递增。但是这个距离最大为 15，所以 16 就是不可达路由。所以这个网路的规模有限。")]),a._v(" "),v("p",[a._v("网络初期，路由器会填表，周期性的向周围的路由器交换信息。将自己和其他网络间的距离都计算出来，知道将所有的距离都填进去，这个过程称为收敛。")]),a._v(" "),v("p",[a._v("优点：实现简单，开销小。\n缺点：RIP 限制了网络的规模。好消息传播的快坏消息传播的慢。随着网络规模的增加路由表中记录了网络的完整路由信息会导致开销增大。")]),a._v(" "),v("h2",{attrs:{id:"ospf-协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ospf-协议"}},[a._v("#")]),a._v(" OSPF 协议")]),a._v(" "),v("ul",[v("li",[a._v("全称开放最短路径优先协议 ODSPF 。")]),a._v(" "),v("li",[a._v("公开发行的协议，不是某一个厂家的。")]),a._v(" "),v("li",[a._v("OSPF 是分布式的链路状态协议。")])]),a._v(" "),v("h3",{attrs:{id:"要点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#要点"}},[a._v("#")]),a._v(" 要点")]),a._v(" "),v("ul",[v("li",[a._v("采用洪范法，向洪水一样类似于广播的方式向所有的路由器发送信息。")]),a._v(" "),v("li",[a._v("发送的信息就与本路由器相邻的所有路由器的链路状态。链路状态是说明都与哪些路由相连，是一种度量。")]),a._v(" "),v("li",[a._v("只有但链路状态发生改变的时候路由器才会用洪范法进向所有路由器发送信息。")]),a._v(" "),v("li",[a._v("所有的路由器交换信息后会形成一个链路状态数据库，这个数据库就是整个网络的拓扑结构图。")]),a._v(" "),v("li",[a._v("每一个路由表使用链路状态数据库中的信息来构造出自己的路由表。")]),a._v(" "),v("li",[a._v("因为洪范法是发向整个网络的，所以为了避免太大的通信量，将 ODSPF 应用到更大的网络上，会将自治系统（大的网络）分成区域（小网络）。而洪范法会在区域中进行通信。")])]),a._v(" "),v("h2",{attrs:{id:"bgp-协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#bgp-协议"}},[a._v("#")]),a._v(" BGP 协议")]),a._v(" "),v("p",[a._v("自治系统（大的网络）之间采用 BGP 协议，称为外部网关协议，此时的网络规模很大，路由选择困难，需要一定的策略。")]),a._v(" "),v("h3",{attrs:{id:"工作原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[a._v("#")]),a._v(" 工作原理")]),a._v(" "),v("ul",[v("li",[a._v("BGP 协议只求到达，不一定是最优，能到达就行。")]),a._v(" "),v("li",[a._v("采用路径向量路由选择协议。")]),a._v(" "),v("li",[a._v("每一个自治系统至少有一个路由器作为“BGP发言人”")]),a._v(" "),v("li",[a._v("发言人和发言人之间不断交换路由信息。")]),a._v(" "),v("li",[a._v("交换的信息是要到达某网络需要经过的 AS")]),a._v(" "),v("li",[a._v("发送信息时根据策略找到到达各 AS 的脚好路由。")])]),a._v(" "),v("h3",{attrs:{id:"报文类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#报文类型"}},[a._v("#")]),a._v(" 报文类型")]),a._v(" "),v("ol",[v("li",[a._v("打开")]),a._v(" "),v("li",[a._v("更新")]),a._v(" "),v("li",[a._v("保活")]),a._v(" "),v("li",[a._v("通知")])]),a._v(" "),v("h2",{attrs:{id:"ipv6-协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ipv6-协议"}},[a._v("#")]),a._v(" IPv6 协议")]),a._v(" "),v("h1",{attrs:{id:"icmp-协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#icmp-协议"}},[a._v("#")]),a._v(" ICMP 协议")]),a._v(" "),v("ul",[v("li",[a._v("用来测试网络层是否故障。 命令 ping 的实现，比较常用。")])]),a._v(" "),v("p",[a._v("局域网的延迟应该小于 10 ms 。")]),a._v(" "),v("p",[a._v("TTL： 数据包最多经过 64 个路由器，每经过一个就减一。可以用来初略的判断对方的系统，不同的系统初值不同，分别是：linux 64 windows 128 Unix 255")]),a._v(" "),v("h1",{attrs:{id:"igmp"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#igmp"}},[a._v("#")]),a._v(" IGMP")]),a._v(" "),v("ul",[v("li",[a._v("点到点")]),a._v(" "),v("li",[a._v("广播")]),a._v(" "),v("li",[a._v("多播")])]),a._v(" "),v("h1",{attrs:{id:"参考"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),v("p",[a._v("[1]. "),v("a",{attrs:{href:"https://blog.csdn.net/u010164190/article/details/79446575?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-2&utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-2",target:"_blank",rel:"noopener noreferrer"}},[a._v("ARP "),v("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=_.exports}}]);
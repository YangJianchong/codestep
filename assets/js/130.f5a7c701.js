(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{489:function(t,s,a){"use strict";a.r(s);var c=a(25),r=Object(c.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第三章：处理数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三章：处理数据"}},[t._v("#")]),t._v(" 第三章：处理数据")]),t._v(" "),a("ul",[a("li",[t._v("C++ 的命名规则。")]),t._v(" "),a("li",[t._v("C++ 内置的整型。")]),t._v(" "),a("li",[t._v("C++11 的新增整型。")])]),t._v(" "),a("h1",{attrs:{id:"_3-1-简单变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-简单变量"}},[t._v("#")]),t._v(" 3.1 简单变量")]),t._v(" "),a("p",[t._v("下面两条语句，第一条是声明一个整型变量 a ，也就是找一块能够存储整数的内存，将其名称标记为 a 。")]),t._v(" "),a("p",[t._v("第二条语句是赋值的意思，也就是向这块名称为 a 的内存中存放整数 1 。")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"变量名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量名"}},[t._v("#")]),t._v(" 变量名")]),t._v(" "),a("p",[t._v("变量名命名规则：")]),t._v(" "),a("ol",[a("li",[t._v("只能由字母，数字和下划线组成。")]),t._v(" "),a("li",[t._v("第一个字符不能是数字。")]),t._v(" "),a("li",[t._v("区分大小写。")]),t._v(" "),a("li",[t._v("不能使用关键字。")]),t._v(" "),a("li",[t._v("以两个下划线或下划线和大写字母开头的名称留给编译器使用。以一个下划线开头的名称留作全局标识符使用。")]),t._v(" "),a("li",[t._v("C++ 对于名称没有长度限制，但是在有些平台上存在长度限制。")])]),t._v(" "),a("h2",{attrs:{id:"整型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整型"}},[t._v("#")]),t._v(" 整型")]),t._v(" "),a("p",[t._v("没有小数部分的数字，例如 1，2，3，-1 ...")]),t._v(" "),a("p",[t._v("根据整型的范围，C++ 提供了多种类型的整型，例如 char，short，int，long 和 C++11 新增的 long long ，")]),t._v(" "),a("p",[t._v("并且每种整型都存在有符号和无符号两种类型，符号例如负号，所以一共有 10 种整型，而 char 常常用来表示字符而非数字。")]),t._v(" "),a("h2",{attrs:{id:"整型-short，int，long-和-long-long"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整型-short，int，long-和-long-long"}},[t._v("#")]),t._v(" 整型 short，int，long 和 long long")]),t._v(" "),a("p",[t._v("在计算机内存中，信息是由 "),a("strong",[t._v("0/1")]),t._v(" 组成的，一个 0/1 表示"),a("strong",[t._v("一位（bit）")]),t._v("，是信息的最小单位。而 8 个 0/1 则组成了一个"),a("strong",[t._v("字节（byte）")]),t._v("。")]),t._v(" "),a("p",[t._v("C++ 对于数据类型的范围没有准确的定义，在不同系统或不同的编译器上有不同的范围，具有弹性，但是遵循以下几个规则：")]),t._v(" "),a("ol",[a("li",[t._v("short 至少 16 位；")]),t._v(" "),a("li",[t._v("int 至少与 short 一样长；")]),t._v(" "),a("li",[t._v("long 至少 32 位，且至少与 int 一样长；")]),t._v(" "),a("li",[t._v("long long 至少 64 位，且至少与 long 一样长；")])]),t._v(" "),a("p",[t._v("一字节有 8 位，每一个位置存在 0/1 两种情况，所以一字节可以表示 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-msup",[a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"2"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[a("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[a("mjx-c",{attrs:{c:"8"}})],1)],1)],1)],1)],1),t._v(" 种情况，那么范围就是 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"["}})],1),a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"0"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:","}})],1),a("mjx-mn",{staticClass:"mjx-n",attrs:{space:"2"}},[a("mjx-c",{attrs:{c:"2"}}),a("mjx-c",{attrs:{c:"5"}}),a("mjx-c",{attrs:{c:"5"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"]"}})],1)],1)],1),t._v(" 或 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"["}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"2212"}})],1),a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"1"}}),a("mjx-c",{attrs:{c:"2"}}),a("mjx-c",{attrs:{c:"8"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:","}})],1),a("mjx-mn",{staticClass:"mjx-n",attrs:{space:"2"}},[a("mjx-c",{attrs:{c:"1"}}),a("mjx-c",{attrs:{c:"2"}}),a("mjx-c",{attrs:{c:"7"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"]"}})],1)],1)],1),t._v("。")],1),t._v(" "),a("p",[t._v("1KB 等于 1024字节， 1MB 等于 1024KB")]),t._v(" "),a("h2",{attrs:{id:"无符号类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无符号类型"}},[t._v("#")]),t._v(" 无符号类型")]),t._v(" "),a("p",[t._v("无符号类型指的是将存储负数的空间取消，都用来存储正数。")]),t._v(" "),a("p",[t._v("例如如果 short 范围为 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"["}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"2212"}})],1),a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"3"}}),a("mjx-c",{attrs:{c:"2"}}),a("mjx-c",{attrs:{c:"7"}}),a("mjx-c",{attrs:{c:"6"}}),a("mjx-c",{attrs:{c:"8"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:","}})],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"2"}},[a("mjx-c",{attrs:{c:"+"}})],1),a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"3"}}),a("mjx-c",{attrs:{c:"2"}}),a("mjx-c",{attrs:{c:"7"}}),a("mjx-c",{attrs:{c:"6"}}),a("mjx-c",{attrs:{c:"8"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"]"}})],1)],1)],1),t._v(" 那么无符号版本的 unsigned short 表示范围为 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"["}})],1),a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"0"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:","}})],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"2"}},[a("mjx-c",{attrs:{c:"2212"}})],1),a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"6"}}),a("mjx-c",{attrs:{c:"5"}}),a("mjx-c",{attrs:{c:"5"}}),a("mjx-c",{attrs:{c:"3"}}),a("mjx-c",{attrs:{c:"5"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"]"}})],1)],1)],1),t._v(" 。")],1),t._v(" "),a("h2",{attrs:{id:"选择整数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择整数类型"}},[t._v("#")]),t._v(" 选择整数类型")]),t._v(" "),a("p",[t._v("C++ 存在多种整数类型，选择范围小的数据类型虽然"),a("strong",[t._v("占用空间")]),t._v("小，但是一旦遇到范围大的数据程序就崩溃了。反之选择范围大的数据类型虽然能够承受的较大的数据但是"),a("strong",[t._v("占用内存")]),t._v("大。")]),t._v(" "),a("p",[t._v("如果没有要求，在数据范围和占用空间的权衡之下一般情况下选择 int 。")]),t._v(" "),a("h2",{attrs:{id:"char-类型：字符和小整数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#char-类型：字符和小整数"}},[t._v("#")]),t._v(" char 类型：字符和小整数")]),t._v(" "),a("p",[t._v("对于字符型 char ，称其为整型的原因是对于存储的本质其实是一个整型的数字，只不过输出时实现了将整型转换为字符的映射。")]),t._v(" "),a("p",[t._v("例如对于 ASCII 码而言，字符 M 对应 77，输入 M 后，根据 ASCII 码的转换规则，在计算机内部存储的是 77 。当输出 M 时，cout 将 77 转换为了 M 显示出来。")]),t._v(" "),a("h1",{attrs:{id:"_3-2-const-限定符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-const-限定符"}},[t._v("#")]),t._v(" 3.2 const 限定符")]),t._v(" "),a("p",[t._v("对于某些常量是不允许修改的，例如月份必定是 12，可以使用 const 关键字来设定一个不变的常量。")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" Month "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("注意，如果声明的时候没有赋值，系统会随机赋一个值，而因为 const 的不变性使得后续的赋值都无效。")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" Month"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nMonth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("虽然 #define 也可以提供类似的功能，但是 const 要优于 #define 。因为 const 明确了变量类型，其次是可以将其限定到特定的函数中，最后 const 可以应用于数组和结构体。")]),t._v(" "),a("p",[t._v("ANSI C 版本也借鉴了 C++ 的 const 关键字，支持这种写法。")]),t._v(" "),a("h1",{attrs:{id:"_3-3-浮点数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-浮点数"}},[t._v("#")]),t._v(" 3.3 浮点数")]),t._v(" "),a("p",[t._v("浮点数就是小数，例如： 1.1，1.542，3.1415 等等。")]),t._v(" "),a("p",[t._v("对于 3.1415926 而言，如果改为 0.31415926（基准值） ，只是修改了小数点的位置，那么修改后的数字称为"),a("strong",[t._v("基准值")]),t._v("，因为移动了两位，所以称 100为"),a("strong",[t._v("缩放因子")]),t._v("。")]),t._v(" "),a("p",[t._v("缩放因子的作用是移动小数点的位置，浮点数也因此得名。对于计算机内部而言，因为是二进制，所以缩放因子是 2 的幂，而非目前 10 的幂。")]),t._v(" "),a("p",[t._v("注意 8.0 也是浮点数，因为存在小数点。")]),t._v(" "),a("p",[t._v("另外一种表示法类似于，3.6E6 ，其中 E6 指 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-msup",[a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"1"}}),a("mjx-c",{attrs:{c:"0"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"0.393em"}},[a("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[a("mjx-c",{attrs:{c:"6"}})],1)],1)],1)],1)],1),t._v(" ，那么 E7 则指 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-msup",[a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"1"}}),a("mjx-c",{attrs:{c:"0"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"0.393em"}},[a("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[a("mjx-c",{attrs:{c:"7"}})],1)],1)],1)],1)],1),t._v("。而 3.6E-2 则表示 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"0"}}),a("mjx-c",{attrs:{c:"."}}),a("mjx-c",{attrs:{c:"0"}}),a("mjx-c",{attrs:{c:"3"}}),a("mjx-c",{attrs:{c:"6"}})],1)],1)],1),t._v("。")],1),t._v(" "),a("h2",{attrs:{id:"浮点类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点类型"}},[t._v("#")]),t._v(" 浮点类型")]),t._v(" "),a("p",[t._v("C++ 的浮点类型有 3 种：float，double 和 long double 。")]),t._v(" "),a("p",[t._v("float 的有效位至少为 32 位， double 至少 48 位且不少于 float ，long double 至少和 double 一样多，这三种有效类型可以一样多。")]),t._v(" "),a("p",[t._v("通常 float 为 32 位，double 位 64 位， long double 位 80，96 或 128 位。另外这三种类型对于指数的限制范围至少是 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"["}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"2212"}})],1),a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"3"}}),a("mjx-c",{attrs:{c:"7"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:","}})],1),a("mjx-mn",{staticClass:"mjx-n",attrs:{space:"2"}},[a("mjx-c",{attrs:{c:"3"}}),a("mjx-c",{attrs:{c:"7"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"]"}})],1)],1)],1),t._v(" 。")],1),t._v(" "),a("p",[t._v("与整数相比，浮点数表示的范围更大，其次是可以表示整数之间的值，但是随之缺点则是"),a("strong",[t._v("运算速度慢")]),t._v("且"),a("strong",[t._v("精度降低")]),t._v("。")]),t._v(" "),a("p",[t._v("传递参数时，将 float 参数提升为 double 可以提高程序的兼容性，因为范围扩大了。")]),t._v(" "),a("h2",{attrs:{id:"auto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auto"}},[t._v("#")]),t._v(" auto")]),t._v(" "),a("p",[t._v("C++11 新增了一个工具，使得编译器可以根据初始值来判断具体的数据类型。")]),t._v(" "),a("p",[t._v("例如，不用直接声明数据类型，可以根据初值来判断具体类型。")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{490:function(v,_,t){"use strict";t.r(_);var e=t(25),s=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"第四章：复合类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第四章：复合类型"}},[v._v("#")]),v._v(" 第四章：复合类型")]),v._v(" "),t("p",[v._v("数组是一种数据格式，用来存储多个同类型的值。")]),v._v(" "),t("p",[v._v("C++ 数组的索引从 0 开始。")]),v._v(" "),t("p",[v._v("数组中没有赋值的位置都用 '\\0' 来占位。")]),v._v(" "),t("p",[v._v("strlen() 函数返回字符串长度（不包含空字符）。")]),v._v(" "),t("p",[v._v("sizeof() 函数返回的是整个数组的长度。")]),v._v(" "),t("p",[v._v("cin 输入时以单词为单位进行判定。")]),v._v(" "),t("p",[v._v("strcat() 将字符串附加到字符数组末尾。注意如果是字符数组的话空间小可能会导致程序奔溃，而对于 string 会自动申请空间不会导致程序崩溃。")]),v._v(" "),t("p",[v._v("strcpy(a,b) 将 b 复制到 a 上。")]),v._v(" "),t("p",[v._v("size() 是 string 类的一个函数，可以用来计算"),t("strong",[v._v("字符串长度")]),v._v("。例如 "),t("code",[v._v("string a;")]),v._v(" 其长度为 "),t("code",[v._v("a.size();")]),v._v(" 。")]),v._v(" "),t("p",[v._v("strlen() 是一个类库 "),t("code",[v._v("#include <cstring>")]),v._v(" 里面的函数，可以用来计算"),t("strong",[v._v("字符数组的长度")]),v._v("。")]),v._v(" "),t("p",[v._v("在 C++ 中声明结构体变量时可以省略 struct 关键字。")]),v._v(" "),t("p",[v._v("共用体和结构体在同一时间内使用共用体时只能使用一种数据类型。使用场景如商品名字既有整型也有字符型可以采用共用体。优点是节省内存。")]),v._v(" "),t("p",[v._v("指针变量增加 1 后，变化的是该指针变量指向的数据类型的"),t("strong",[v._v("单位字节")]),v._v("大小。例如指向 double 变量的指针加 1 后，因为 double 是 8 个字节，所以指针数值会增加 8 。")]),v._v(" "),t("p",[v._v("数组索引和指针之间的转换 ："),t("code",[v._v("s[1] == * (s+1)")]),v._v(" 。")]),v._v(" "),t("p",[v._v("对于 "),t("code",[v._v("int *a")]),v._v(" ，其中指针是 a ，而 *a 是一个整型变量。")]),v._v(" "),t("p",[v._v("静态声明："),t("code",[v._v("int a[100]")]),v._v(" 是静态声明一个数组，编译时会将空间写死。")]),v._v(" "),t("p",[v._v("动态声明："),t("code",[v._v("int * a = new int[size];")]),v._v(" 则是动态声明，根据运行时数据的变化来动态的申请空间。")]),v._v(" "),t("p",[v._v("数组名是第一个元素的地址。采用 cout 输出数组名可以直接输出数组中第一个元素。")]),v._v(" "),t("p",[v._v("new 是在运行时创建数组，可以根据输入数据动态改变。如果不采用 new 直接声明一个数组变量则表示是编译时创建，空间大小就提前写死了，后续无法修改。")]),v._v(" "),t("p",[t("code",[v._v("->")]),v._v(" 和 "),t("code",[v._v(".")]),v._v(" 都是访问成员，但是在创建动态结构中，只能使用前者。也就是前者是指针调用，后者则是实体调用。当然指针也可以用点号，注意要将 * 阔进去。"),t("code",[v._v("(*a).k;")]),v._v(" / "),t("code",[v._v("a->k;")])])])}),[],!1,null,null,null);_.default=s.exports}}]);
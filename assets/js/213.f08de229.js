(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{572:function(_,t,v){"use strict";v.r(t);var a=v(25),r=Object(a.a)({},(function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[_._v("#")]),_._v(" 问题")]),_._v(" "),v("h2",{attrs:{id:"_1-0-提取数字"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-提取数字"}},[_._v("#")]),_._v(" 1.0 提取数字")]),_._v(" "),v("ul",[v("li",[_._v("结果 ： "),v("code",[_._v("\\d+")]),_._v(" "),v("ul",[v("li",[_._v("其中 "),v("code",[_._v("\\d")]),_._v(" 代表数字 0-9 。"),v("code",[_._v("+")]),_._v(" 代表前面的子表达式出现一次或多次。也就是整数出现一个或多个都匹配上。")])])]),_._v(" "),v("li",[_._v("也可以用 "),v("code",[_._v("[0-9]+")]),_._v(" 来匹配\n"),v("ul",[v("li",[_._v("其中方括号 [] 代表匹配范围，匹配方括号中的任意字符，0-9 中的横线省略了 1，2，3... 等数字，也就是 [0-9] 等价于 [0123456789] 横线简写了范围。")])])])]),_._v(" "),v("h2",{attrs:{id:"_2-0-提取负整数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-0-提取负整数"}},[_._v("#")]),_._v(" 2.0 提取负整数")]),_._v(" "),v("ul",[v("li",[_._v("结果： "),v("code",[_._v("-\\d+")]),_._v(" "),v("ul",[v("li",[_._v("在上一题的基础上加上负号就行了，")])])]),_._v(" "),v("li",[_._v("也可以采用 "),v("code",[_._v("-[0-9]+")])])]),_._v(" "),v("h2",{attrs:{id:"_3-0-提取整数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-0-提取整数"}},[_._v("#")]),_._v(" 3.0 提取整数")]),_._v(" "),v("p",[_._v("整数包含正整数和负整数，也就是上面二者的结合，正整数的正号一般省略不写，所以二者区别就是是否出现负号。也就是负号出现一次或多次。")]),_._v(" "),v("ul",[v("li",[_._v("结果 ： "),v("code",[_._v("-?\\d+")]),_._v(" "),v("ul",[v("li",[_._v("引入了新的符号问号(?) 代表前面出现的字符出现零次或一次。这样就实现了既可以提取正整数也可以提取负整数。")])])])]),_._v(" "),v("h2",{attrs:{id:"_3-0-如何提取小写单词？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-0-如何提取小写单词？"}},[_._v("#")]),_._v(" 3.0 如何提取小写单词？")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("[a-z]+")]),_._v(" "),v("ul",[v("li",[_._v("单词范围是小写 a-z 并且出现一次或多次。")])])])]),_._v(" "),v("h2",{attrs:{id:"_4-0-如何提取小写字母？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-0-如何提取小写字母？"}},[_._v("#")]),_._v(" 4.0 如何提取小写字母？")]),_._v(" "),v("ul",[v("li",[_._v("结果： "),v("code",[_._v("([a-z])*")]),_._v(" "),v("ul",[v("li",[_._v("其中圆括号 ()表示其中内容是一个模块，也就是 [a-z] 只出现一个 其中星号 * 代表前面的子模式出现零次或多次")])])]),_._v(" "),v("li",[_._v("提取大写字母 "),v("code",[_._v("([A-Z])*")])])]),_._v(" "),v("h2",{attrs:{id:"_5-0-提取-n-位数字"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-0-提取-n-位数字"}},[_._v("#")]),_._v(" 5.0 提取 n 位数字")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("\\d{n}")]),_._v(" "),v("ul",[v("li",[_._v("其中花括号 {} 表示范围, n 确定下来的范围 "),v("code",[_._v("\\d{3}")]),_._v("  就代表 3 位数字")])])])]),_._v(" "),v("h2",{attrs:{id:"_6-0-提取至少-n-位数字"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-0-提取至少-n-位数字"}},[_._v("#")]),_._v(" 6.0 提取至少 n 位数字")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("\\d{n,}")]),_._v(" "),v("ul",[v("li",[_._v("花括号里面存在两个参数 n,m 第一个参数是上界,第二个参数是下界,如果第二个不写代表无穷,所以 "),v("code",[_._v("\\d{3,}")]),_._v(" 就代表至少 3 位整数.")])])])]),_._v(" "),v("h2",{attrs:{id:"_7-0-提取-m-到-n-位数字"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-0-提取-m-到-n-位数字"}},[_._v("#")]),_._v(" 7.0 提取 m 到 n 位数字")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("\\d{m,n}")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("\\d{3,10}")]),_._v(" 意思就说提取 3 位到 10 的数字.")])])])]),_._v(" "),v("h2",{attrs:{id:"_8-0-提取-0-或非零开头的数字"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-0-提取-0-或非零开头的数字"}},[_._v("#")]),_._v(" 8.0 提取 0 或非零开头的数字")]),_._v(" "),v("ul",[v("li",[_._v("结果 "),v("code",[_._v("(0|[1-9][0-9]*)")]),_._v(" "),v("ul",[v("li",[_._v("其中圆括号代表一个模式也就是一个整体")]),_._v(" "),v("li",[_._v("管道线 | 代表两侧的模式选择一个,如何满足前者就匹配,满足后者也匹配,而前者则代表零开头的数字,后者则代表非零开头的数字.")]),_._v(" "),v("li",[_._v("其中 * 号代表前面的出现的 [0-9] 零次或多次而之前的 [1-9] 则固定了开头出现的数字不能是 0")])])])]),_._v(" "),v("h2",{attrs:{id:"_9-0-提取非零开头的且最多带两位小数的数字"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-0-提取非零开头的且最多带两位小数的数字"}},[_._v("#")]),_._v(" 9.0 提取非零开头的且最多带两位小数的数字")]),_._v(" "),v("ul",[v("li",[_._v("结果: "),v("code",[_._v("([1-9][0-9]*)+(\\.[0-9]{1,2})?")]),_._v(" "),v("ul",[v("li",[_._v("这个表达式分为两部分,整数部分和小数部分 采用圆括号分割开来, 而圆括号结尾部分采用加号 + 链接, 加号代表前面的子模式也就是圆括号中的匹配出现一次或多次.")]),_._v(" "),v("li",[_._v("其中整数部分就和上一题类似了,不明白可以回头看第八题.")]),_._v(" "),v("li",[_._v("小数部分的特征则是以点号 . 开头,但是这个符号本身是元字符,代表匹配任意字符零次或一次,所以需要转移,使其恢复原意,也就是反斜杠 \\ 的作用了.")]),_._v(" "),v("li",[_._v("之后的匹配应该就很熟悉了,匹配所有数字并且花括号{} 保证了数字出现 1 到 2 位. 结尾用问号 ? 代表出现零次或一次,也就是小数部分的子模式了,可以没有小数部分,也可以存在,但是存在必须满足 1 - 2 位的小数.")])])])]),_._v(" "),v("h2",{attrs:{id:"_10-0-带-1-2-位-小数的正数或负数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_10-0-带-1-2-位-小数的正数或负数"}},[_._v("#")]),_._v(" 10.0 带 1-2 位 小数的正数或负数?")]),_._v(" "),v("h1",{attrs:{id:"正则表达式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[_._v("#")]),_._v(" 正则表达式")]),_._v(" "),v("p",[_._v("正则表达式是元字符通过一定的规则来实现对文本的匹配，就像字符串查询一样，KMP 也是在匹配，只不过的是自身，而正则更为强大，通过元字符的组合可以匹配任何你想要的结果。")]),_._v(" "),v("blockquote",[v("p",[_._v("正则表达式的特点是：")]),_._v(" "),v("ol",[v("li",[_._v("灵活性、逻辑性和功能性非常强；")]),_._v(" "),v("li",[_._v("可以迅速地用极简单的方式达到字符串的复杂控制。")]),_._v(" "),v("li",[_._v("对于刚接触的人来说，比较晦涩难懂。")])])]),_._v(" "),v("p",[_._v("其应用场景如下：")]),_._v(" "),v("ul",[v("li",[_._v("例如网址，"),v("code",[_._v("https://www.google.com/")]),_._v(" 网址都存在相同的格式，如何在一堆乱的字符串将网址提取出来？")]),_._v(" "),v("li",[_._v("例如邮箱 "),v("code",[_._v("jiewei199@qq.com")]),_._v(" 也存在特定的格式，如何文本中提取出邮箱。")])]),_._v(" "),v("p",[_._v("而正则表达式就是提取这些信息的有力武器！而正则表达式则是由元字符组成。例如 \\ ^ $ * + ? {}  等等")]),_._v(" "),v("h1",{attrs:{id:"元字符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[_._v("#")]),_._v(" 元字符")]),_._v(" "),v("h2",{attrs:{id:""}},[v("a",{staticClass:"header-anchor",attrs:{href:"#"}},[_._v("#")]),_._v(" .")]),_._v(" "),v("p",[_._v("点用来匹配除"),v("strong",[_._v("换行符")]),_._v("以外的"),v("strong",[_._v("任意单个")]),_._v("字符。注意是一个字符！")]),_._v(" "),v("p",[_._v("e.g.")]),_._v(" "),v("ul",[v("li",[_._v("a. => '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("ap")])]),_._v("le' '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("an")])]),_._v("other' ''"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("ad")])]),_._v("dress'")],1),_._v(" "),v("li",[_._v("w. => '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("wh")])]),_._v("ite' '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("wr")])]),_._v("ite' '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("wo")])]),_._v("uld'")],1),_._v(" "),v("li",[_._v("c. => '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("ca")])]),_._v("ttle' '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("co")])]),_._v("py' '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("co")])]),_._v("de'")],1)]),_._v(" "),v("h2",{attrs:{id:"-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[_._v("#")]),_._v(" []")]),_._v(" "),v("p",[_._v("方括号用来匹配方括号中包含的任意字符。")]),_._v(" "),v("p",[_._v("例如：")]),_._v(" "),v("ul",[v("li",[_._v("[0-9] => '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("2001")])]),_._v("xxx'\n"),v("ul",[v("li",[_._v("匹配含有数字的字符。")])])],1),_._v(" "),v("li",[_._v("[a-z] => '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("kkk")])]),_._v("200'"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("coding")])]),_._v("1777'\n"),v("ul",[v("li",[_._v("匹配含有小写字母的字符。")])])],1),_._v(" "),v("li",[_._v("[A-Z] => '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("A")])]),_._v("xxx"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("CODE")])]),_._v("xxx'\n"),v("ul",[v("li",[_._v("匹配含有大写字母的字符。")])])],1),_._v(" "),v("li",[_._v("[a-zA-Z0-9] '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("2001JieWeiqq")])]),_._v("'\n"),v("ul",[v("li",[_._v("匹配数字大小写字母")])])],1),_._v(" "),v("li",[_._v("'[pjc]ython' 可以匹配 'python' 'jython' 'cython' 。")]),_._v(" "),v("li",[_._v("'[a-zA-Z0-9]' 可以匹配任意大小写字母或数字。")])]),_._v(" "),v("h2",{attrs:{id:"-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#-3"}},[_._v("#")]),_._v(" *")]),_._v(" "),v("p",[_._v("星号用来匹配前面的子表示"),v("strong",[_._v("零次")]),_._v("或"),v("strong",[_._v("多次")])]),_._v(" "),v("p",[_._v("e.t.")]),_._v(" "),v("ul",[v("li",[_._v("app*le => '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("aple")])]),_._v("' '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("appppppppple")])]),_._v("'\n"),v("ul",[v("li",[_._v("星号代表其前面的字符 p 可以出现零次或多次的都能匹配上。")])])],1),_._v(" "),v("li",[_._v("stu*dy => '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("stdy")])]),_._v("' '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("study")])]),_._v("' '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("stuuuuudy")])]),_._v("'")],1)]),_._v(" "),v("h2",{attrs:{id:"-4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#-4"}},[_._v("#")]),_._v(" +")]),_._v(" "),v("p",[_._v("加号代表前面的字符出现一次或多次。")]),_._v(" "),v("p",[_._v("e.t.")]),_._v(" "),v("ul",[v("li",[_._v("app+le => '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("apple")])]),_._v("' '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("appppppppple")])]),_._v("'\n"),v("ul",[v("li",[_._v("加号代表其前面的字符 p 可以出现一次或多次的都能匹配上。")])])],1),_._v(" "),v("li",[_._v("stu+dy => '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("study")])]),_._v("' '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("stuuuuudy")])]),_._v("'")],1)]),_._v(" "),v("h2",{attrs:{id:"？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#？"}},[_._v("#")]),_._v(" ？")]),_._v(" "),v("p",[_._v("问好表示可以匹配前面出现的字符零次或一次。或者指明非贪婪模式。")]),_._v(" "),v("p",[_._v("e.t.")]),_._v(" "),v("ul",[v("li",[_._v("app?le => '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("aple")])]),_._v("' '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("aple")])]),_._v("'\n"),v("ul",[v("li",[_._v("加号代表其前面的字符 p 可以出现一次或多次的都能匹配上。")])])],1),_._v(" "),v("li",[_._v("stu?dy => '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("study")])]),_._v("' '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("stdy")])]),_._v("'")],1),_._v(" "),v("li",[_._v("aa test1 bb test2 cc '.*?' => '"),v("font",{attrs:{color:"#1abc9c"}},[v("strong",[_._v("aa")])]),_._v("'")],1)]),_._v(" "),v("h2",{attrs:{id:"-5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#-5"}},[_._v("#")]),_._v(" ^")]),_._v(" "),v("p",[_._v("否定字符。")]),_._v(" "),v("ul",[v("li",[_._v("[^a-z]\n"),v("ul",[v("li",[_._v("匹配出结果中将小写剔除出去。")])])]),_._v(" "),v("li",[_._v("[^0-9]\n"),v("ul",[v("li",[_._v("匹配出结果中将数字剔除出去。")])])])]),_._v(" "),v("h2",{attrs:{id:"n-m"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#n-m"}},[_._v("#")]),_._v(" {n,m}")]),_._v(" "),v("p",[_._v("花括号，表示范围，n 则是前面字符至少 n 次，但是不超过 m 次。")]),_._v(" "),v("ul",[v("li",[_._v("[a-z]{2,3} => ''")])]),_._v(" "),v("h2",{attrs:{id:"xyz"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#xyz"}},[_._v("#")]),_._v(" (xyz)")]),_._v(" "),v("p",[_._v("指定顺序。")]),_._v(" "),v("h2",{attrs:{id:"-6"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#-6"}},[_._v("#")]),_._v(" |")]),_._v(" "),v("p",[_._v("选择，或 的意思，管道线前后的字符都能匹配上。")]),_._v(" "),v("h2",{attrs:{id:"-7"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#-7"}},[_._v("#")]),_._v(" $")]),_._v(" "),v("p",[_._v("匹配行的结束。")]),_._v(" "),v("h1",{attrs:{id:"间写字符集"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#间写字符集"}},[_._v("#")]),_._v(" 间写字符集")]),_._v(" "),v("h2",{attrs:{id:"-8"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#-8"}},[_._v("#")]),_._v(" \\")]),_._v(" "),v("p",[_._v("转义字符，使字符恢复本来的含义。")]),_._v(" "),v("p",[_._v("例如匹配问号 ？ 问号本身具备一个特殊的含义即匹配之前字符出现零次或一次，但是如何匹配问好本身，加上反斜杠即可 ? 这样就使问好 ? 恢复其原意。")]),_._v(" "),v("p",[_._v("不仅如此，反斜杠和字母组合实现了更多的功能。")]),_._v(" "),v("h2",{attrs:{id:"w"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#w"}},[_._v("#")]),_._v(" \\w")]),_._v(" "),v("p",[_._v("\\w 相当于 [a-zA-Z0-9_] 匹配了大小写字母以及数字。而 \\W 大写字母则等价于 [^\\w] 。")]),_._v(" "),v("h2",{attrs:{id:"d"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#d"}},[_._v("#")]),_._v(" \\d")]),_._v(" "),v("p",[_._v("\\d 用来匹配数字 \\D 用来匹配非数字。")]),_._v(" "),v("h2",{attrs:{id:"s"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#s"}},[_._v("#")]),_._v(" \\s")]),_._v(" "),v("p",[_._v("\\s 用来匹配空格符，\\S 则用来匹配非空格符。")]),_._v(" "),v("h2",{attrs:{id:"参考"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[_._v("#")]),_._v(" 参考")]),_._v(" "),v("p",[_._v("[1]. https://www.cnblogs.com/zxin/archive/2013/01/26/2877765.html\n[2]. https://github.com/cdoco/learn-regex-zh")])])}),[],!1,null,null,null);t.default=r.exports}}]);
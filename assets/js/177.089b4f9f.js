(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{536:function(e,t,r){"use strict";r.r(t);var _=r(25),a=Object(_.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"主题四：数据整理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#主题四：数据整理"}},[e._v("#")]),e._v(" 主题四：数据整理")]),e._v(" "),r("p",[e._v("文件格式转换。")]),e._v(" "),r("p",[e._v("应用场景：日志处理。")]),e._v(" "),r("h2",{attrs:{id:"正则表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[e._v("#")]),e._v(" 正则表达式")]),e._v(" "),r("ul",[r("li",[e._v('. 除空格之外的"任意单个字符"')]),e._v(" "),r("li",[e._v("* 匹配前面字符零次或多次")]),e._v(" "),r("li",[e._v("+ 匹配前面字符一次或多次")]),e._v(" "),r("li",[e._v("[abc] 匹配 a, b 和 c 中的任意一个")]),e._v(" "),r("li",[e._v("(RX1|RX2) 任何能够匹配RX1 或 RX2的结果")]),e._v(" "),r("li",[e._v("^ 行首")]),e._v(" "),r("li",[e._v("$ 行尾")])]),e._v(" "),r("blockquote",[r("ul",[r("li",[e._v("和 + 在默认情况下是贪婪模式，也就是说，它们会尽可能多的匹配文本。\n可以给 * 或 + 增加一个? 后缀使其变成非贪婪模式。")])])]),e._v(" "),r("p",[e._v("这一节主要练习一下正则表达式，其他内容有些需要服务器暂时略过。")]),e._v(" "),r("p",[e._v("推荐下面两个参考资料，由于之前学过这些内容，这里就不赘述了。")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://regexone.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("regexone"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/ziishaned/learn-regex",target:"_blank",rel:"noopener noreferrer"}},[e._v("learn-regex"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=a.exports}}]);